definitions:
  models.Author:
    properties:
      AuthorId:
        type: string
      CreatedAt:
        type: string
      Name:
        type: string
      UpdatedAt:
        type: string
    type: object
  models.Book:
    properties:
      AuthorId:
        type: string
      BookId:
        type: string
      CategoryId:
        items:
          type: string
        type: array
      CategoryName:
        type: string
      CreatedAt:
        type: string
      Name:
        type: string
      Price:
        type: number
      UpdatedAt:
        type: string
    type: object
  models.CUAuthor:
    properties:
      Name:
        type: string
    type: object
  models.Category:
    properties:
      categoryId:
        type: string
      createdAt:
        type: string
      name:
        type: string
      parentCategory:
        type: string
      parentUuid:
        type: string
      updatedAt:
        type: string
    type: object
  models.CreateBook:
    properties:
      AuthorId:
        type: string
      CategoryId:
        items:
          type: string
        type: array
      Name:
        type: string
      Price:
        type: number
    type: object
  models.CreateCategory:
    properties:
      name:
        type: string
      parentUuid:
        type: string
    type: object
  models.CreateOrder:
    properties:
      BookId:
        type: string
      Description:
        type: string
    type: object
  models.Error:
    properties:
      message:
        type: string
    type: object
  models.ListAuthors:
    properties:
      Authors:
        items:
          $ref: '#/definitions/models.Author'
        type: array
    type: object
  models.ListBooks:
    properties:
      Books:
        items:
          $ref: '#/definitions/models.Book'
        type: array
    type: object
  models.ListCategories:
    properties:
      categories:
        items:
          $ref: '#/definitions/models.Category'
        type: array
    type: object
  models.ListOrders:
    properties:
      Orders:
        items:
          $ref: '#/definitions/models.Order'
        type: array
    type: object
  models.Order:
    properties:
      AuthorId:
        type: string
      AuthorName:
        type: string
      BookId:
        type: string
      BookName:
        type: string
      CreatedAt:
        type: string
      Description:
        type: string
      OrderId:
        type: string
      UpdatedAt:
        type: string
    type: object
  models.StandardErrorModel:
    properties:
      error:
        $ref: '#/definitions/models.Error'
    type: object
  models.UpdateBook:
    properties:
      AuthorId:
        type: string
      CategoryId:
        type: string
      Name:
        type: string
      Price:
        type: number
    type: object
  models.UpdateCategory:
    properties:
      name:
        type: string
      parentUuid:
        type: string
    type: object
  models.UpdateOrder:
    properties:
      BookId:
        type: string
      Description:
        type: string
    type: object
info:
  contact: {}
paths:
  /v1/catalogs/authors:
    get:
      consumes:
      - application/json
      description: This API for getting list of authors
      parameters:
      - description: Page
        in: query
        name: page
        type: string
      - description: Limit
        in: query
        name: limit
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ListAuthors'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
      summary: ListAuthors
      tags:
      - author
  /v1/catalogs/authors/:
    post:
      consumes:
      - application/json
      description: This API for creating a new author
      parameters:
      - description: authorCreateRequest
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.CUAuthor'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Author'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
      summary: CreateAuthor
      tags:
      - author
  /v1/catalogs/authors/{id}:
    delete:
      consumes:
      - application/json
      description: This API for deleting the author
      parameters:
      - description: AuthorId
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
      summary: DeleteAuthor
      tags:
      - author
    get:
      consumes:
      - application/json
      description: This API for getting author detail
      parameters:
      - description: AuthorId
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Author'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
      summary: GetAuthor
      tags:
      - author
    put:
      consumes:
      - application/json
      description: This API for updating author
      parameters:
      - description: AuthorId
        in: path
        name: id
        required: true
        type: string
      - description: BookUpdateRequest
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.CUAuthor'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Author'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
      summary: UpdateAuthor
      tags:
      - author
  /v1/catalogs/books:
    get:
      consumes:
      - application/json
      description: This API for getting list of books
      parameters:
      - description: Page
        in: query
        name: page
        type: string
      - description: Limit
        in: query
        name: limit
        type: string
      - description: Limit
        in: query
        name: authors
        type: string
      - description: Limit
        in: query
        name: category
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ListBooks'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
      summary: ListBooks
      tags:
      - book
  /v1/catalogs/books/:
    post:
      consumes:
      - application/json
      description: This API for creating a new book
      parameters:
      - description: bookCreateRequest
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.CreateBook'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Book'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
      summary: CreateBook
      tags:
      - book
  /v1/catalogs/books/{id}:
    delete:
      consumes:
      - application/json
      description: This API for deleting book
      parameters:
      - description: BookId
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
      summary: DeleteBook
      tags:
      - book
    get:
      consumes:
      - application/json
      description: This API for getting book detail
      parameters:
      - description: BookId
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Book'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
      summary: GetBook
      tags:
      - book
    put:
      consumes:
      - application/json
      description: This API for updating book
      parameters:
      - description: BookId
        in: path
        name: id
        required: true
        type: string
      - description: bookUpdateRequest
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.UpdateBook'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Book'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
      summary: UpdateBook
      tags:
      - book
  /v1/catalogs/categories:
    get:
      consumes:
      - application/json
      description: This API for getting list of categories
      parameters:
      - description: Page
        in: query
        name: page
        type: string
      - description: Limit
        in: query
        name: limit
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ListCategories'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
      summary: ListCategories
      tags:
      - category
  /v1/catalogs/categories/:
    post:
      consumes:
      - application/json
      description: This API for creating a new category
      parameters:
      - description: categoryCreateRequest
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.CreateCategory'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Category'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
      summary: CreateCategory
      tags:
      - category
  /v1/catalogs/categories/{id}:
    delete:
      consumes:
      - application/json
      description: This API for deleting category
      parameters:
      - description: CategoryId
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
      summary: DeleteCategory
      tags:
      - category
    get:
      consumes:
      - application/json
      description: This API for getting category detail
      parameters:
      - description: CategoryId
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Category'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
      summary: GetCategory
      tags:
      - category
    put:
      consumes:
      - application/json
      description: This API for updating category
      parameters:
      - description: CategoryId
        in: path
        name: id
        required: true
        type: string
      - description: categoryUpdateRequest
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.UpdateCategory'
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
      summary: UpdateCategory
      tags:
      - category
  /v1/orders:
    get:
      consumes:
      - application/json
      description: This API for getting list of order
      parameters:
      - description: Page
        in: query
        name: page
        type: string
      - description: Limit
        in: query
        name: limit
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ListOrders'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
      summary: ListOrders
      tags:
      - order
  /v1/orders/:
    post:
      consumes:
      - application/json
      description: This API for creating a new order
      parameters:
      - description: orderCreateRequest
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.CreateOrder'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Order'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
      summary: CreateOrder
      tags:
      - order
  /v1/orders/{id}:
    delete:
      consumes:
      - application/json
      description: This API for deleting order
      parameters:
      - description: OrderId
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
      summary: DeleteOrder
      tags:
      - order
    get:
      consumes:
      - application/json
      description: This API for getting order detail
      parameters:
      - description: OrderId
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Order'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
      summary: GetOrder
      tags:
      - order
    put:
      consumes:
      - application/json
      description: This API for updating order
      parameters:
      - description: OrderId
        in: path
        name: id
        required: true
        type: string
      - description: orderUpdateRequest
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.UpdateOrder'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Order'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.StandardErrorModel'
      summary: UpdateOrder
      tags:
      - order
swagger: "2.0"
